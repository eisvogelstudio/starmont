name: CI

on:
  push:
    branches: [main, development,'**']
    paths:
      - '**.zig'
      - '.github/workflows/ci.yaml'
  pull_request:
    branches: [main, development]
    paths:
      - '**.zig'
      - '.github/workflows/ci.yaml'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.0

      - name: Check Format
        run: zig fmt --check .

  build:
    name: Build
    needs: fmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_mode: [Debug, ReleaseSafe, ReleaseFast, ReleaseSmall]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.0

      - name: Install Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl1-mesa-dev libx11-dev libxrandr-dev libxi-dev \
            libxinerama-dev libxcursor-dev libwayland-dev libxkbcommon-dev \
            wayland-protocols wayland-scanner++

      - name: Cache Build
        uses: actions/cache@v4
        with:
          path: |
            zig-cache
            zig-out
          key: zig-${{ runner.os }}-${{ matrix.build_mode }}

      - name: Build
        run: zig build -Doptimize=${{ matrix.build_mode }} -DhasRenderer=false

  test:
    name: Test on ${{ matrix.os }} / ${{ matrix.build_mode }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_mode: [Debug, ReleaseSafe, ReleaseFast, ReleaseSmall]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.0

      - name: Install Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl1-mesa-dev libx11-dev libxrandr-dev libxi-dev \
            libxinerama-dev libxcursor-dev libwayland-dev libxkbcommon \
            wayland-protocols wayland-scanner++

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            zig-cache
            zig-out
          key: zig-${{ runner.os }}-${{ matrix.build_mode }}
          restore-keys: |
            zig-${{ runner.os }}-

      - name: Run Tests
        run: zig build test -Doptimize=${{ matrix.build_mode }}

  simtest:
    name: SimTest
    needs: test
    if: github.ref_name == 'main' || github.ref_name == 'development'
    runs-on: ubuntu-latest
    steps:
      - name: Run SimTest (placeholder)
        run: echo "SimTest job (to be implemented)"

  bench:
    name: Benchmark
    needs: test
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Run Benchmark (placeholder)
        run: echo "Benchmark job (to be implemented)"
